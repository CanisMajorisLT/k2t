{"version":3,"sources":["utils.js"],"names":[],"mappings":";;;;;AAGA,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;;;;;;;;;;;;;;;;;;AAkB7B,OAAO,CAAC,WAAW,GAAG,SAAS,WAAW,CAAE,kBAAkB,EAAE;AAC9D,WAAO,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;CAC1C,CAAC;;AAIF,OAAO,CAAC,eAAe,GAAG,SAAS,eAAe,CAAE,IAAI,EAAE,YAAY,EAAE;AACtE,WAAO,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,UAAC,MAAM,EAAE,KAAK,EAAI;AAC9B,YAAI,WAAW,GAAG,EAAE,CAAC;AACrB,YAAI,YAAY,CAAC,KAAK,CAAC,KAAK,SAAS,EAAE;AACnC,uBAAW,CAAC,KAAK,GAAG,QAAQ,CAAA;SAC/B;AACD,eAAO;;cAAM,KAAK,EAAE,WAAW,AAAC;YAAE,MAAM;SAAQ,CAAA;KACnD,CAAC,CAAA;CACb,CAAC;;AAGF,OAAO,CAAC,kBAAkB,GAAG,UAAA,IAAI,EAAG;AAChC,QAAI,gBAAgB,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3D,QAAI,OAAO,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;AAC1B,WAAO,OAAO,CACV,KAAK,CAAC,EAAE,CAAC,CACT,GAAG,CAAC,UAAC,MAAM,EAAI;AACX,YAAI,gBAAgB,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;AACzC,mBAAO,EAAE,CAAA;SACZ;AACD,eAAO,MAAM,CAAA;KAChB,CAAC,CACF,IAAI,CAAC,EAAE,CAAC,CAAA;CACf,CAAC","file":"utils-compiled.js","sourcesContent":["/**\r\n * Created by vyt on 2015-08-24.\r\n */\r\nlet React = require(\"react\");\r\n\r\n/*\r\nexports.getGamesDataInJSON = function getGamesDataInJSON () {\r\n\r\n    let gamesData = window.localStorage.getItem(\"games\");\r\n    return JSON.parse(gamesData)\r\n\r\n};\r\n\r\n/!**\r\n * @param {object} data full object of games data {gameId: {}, gameId: {}..}*!/\r\n    exports.saveGamesDataToLocalStorage = function saveGamesDataToLocalStorage (data) {\r\n    let gamesData = window.localStorage.setItem(\"games\", data)\r\n\r\n};*/\r\n\r\n//not used\r\nexports.filterGames = function filterGames (localStorageOutput) {\r\n  return localStorageOutput.filter(/regex/)\r\n};\r\n\r\n\r\n\r\nexports.makeWordHeatmap = function makeWordHeatmap (word, heatMapArray) {\r\n  return word.split(\"\").map((letter, index)=> {\r\n                let letterStyle = {};\r\n                if (heatMapArray[index] !== undefined) {\r\n                    letterStyle.color = \"yellow\"\r\n                }\r\n                return <span style={letterStyle}>{letter}</span>\r\n            })\r\n};\r\n\r\n\r\nexports.trimAndRemoveSigns = word=> {\r\n    let signsToBeRemoved = [\",\", \".\", \";\", \":\", \"(\", \")\", \"!\"];\r\n    let newWord = word.trim();\r\n    return newWord.\r\n        split(\"\").\r\n        map((letter)=> {\r\n            if (signsToBeRemoved.indexOf(letter) !== -1) {\r\n                return \"\"\r\n            }\r\n            return letter\r\n        }).\r\n        join(\"\")\r\n};"]}